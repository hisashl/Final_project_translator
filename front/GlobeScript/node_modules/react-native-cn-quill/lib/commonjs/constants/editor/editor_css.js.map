{"version":3,"sources":["editor_css.ts"],"names":["getFontName","font","toLowerCase","replace","editor_css","editorId","containerId","autoSize","color","background","placeholder","fonts","defaultFont","undefined","fontCss","forEach","f","css","name"],"mappings":";;;;;;;AAEA,MAAMA,WAAW,GAAIC,IAAD,IAAkB;AACpC,SAAOA,IAAI,CAACC,WAAL,GAAmBC,OAAnB,CAA2B,KAA3B,EAAkC,GAAlC,CAAP;AACD,CAFD;;AAIO,MAAMC,UAAU,GAAG,CACxBC,QADwB,EAExBC,WAFwB,EAGxBC,QAHwB,EAIxBC,KAAK,GAAG,iBAJgB,EAKxBC,UAAU,GAAG,OALW,EAMxBC,WAAW,GAAG,iBANU,EAOxBC,KAAwB,GAAG,EAPH,EAQxBC,WAA+B,GAAGC,SARV,KASrB;AACH,MAAIC,OAAO,GAAG,EAAd;AACAH,EAAAA,KAAK,CAACI,OAAN,CAAeC,CAAD,IAAO;AACnBF,IAAAA,OAAO,GAAGA,OAAO,GAAG,GAAV,GAAgBE,CAAC,CAACC,GAA5B;AACD,GAFD;AAIAN,EAAAA,KAAK,CAACI,OAAN,CAAeC,CAAD,IAAO;AACnBF,IAAAA,OAAO,GACLA,OAAO,GACN;AACP;AACA,iBAAiBd,WAAW,CAACgB,CAAC,CAACE,IAAH,CAAS;AACrC,sBAAsBF,CAAC,CAACE,IAAK;AAC7B;AACA,KAPI;AAQD,GATD;AAWA,SAAQ;AACV;AACA;AACA;AACA,iFAAiFT,UAAW;AAC5F,GAAGH,WAAY;AACf,WAAWE,KAAM;AACjB,IACID,QAAQ,GACH;AACT;AACA,GAHY,GAIH;AACT;AACA,GACG;AACH;AACA;AACA;AACA;AACA;AACA,GAAGF,QAAS;AACZ;AACA;AACA;AACA;AACA,IAAIO,WAAW,GAAG,mBAAmBA,WAAnB,GAAiC,GAApC,GAA0C,EAAG;AAC5D;AACA;AACA,GAAGP,QAAS;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAWK,WAAY;AACvB;AACA;AACA,EAAEI,OAAQ;AACV;AACA;AACA;AACA,CA7CE;AA8CD,CAxEM","sourcesContent":["import type { CustomFont } from '../../types';\r\n\r\nconst getFontName = (font: string) => {\r\n  return font.toLowerCase().replace(/\\s/g, '-');\r\n};\r\n\r\nexport const editor_css = (\r\n  editorId: string,\r\n  containerId: string,\r\n  autoSize: boolean,\r\n  color = 'rgb(32, 35, 42)',\r\n  background = 'white',\r\n  placeholder = 'rgba(0,0,0,0.6)',\r\n  fonts: Array<CustomFont> = [],\r\n  defaultFont: string | undefined = undefined\r\n) => {\r\n  let fontCss = '';\r\n  fonts.forEach((f) => {\r\n    fontCss = fontCss + ' ' + f.css;\r\n  });\r\n\r\n  fonts.forEach((f) => {\r\n    fontCss =\r\n      fontCss +\r\n      `\r\n      /* Set content font-families */\r\n      .ql-font-${getFontName(f.name)} {\r\n      font-family: \"${f.name}\";\r\n      }\r\n    `;\r\n  });\r\n\r\n  return `\r\n<style>\r\n* {outline: 0px solid transparent;-webkit-tap-highlight-color: rgba(0,0,0,0);-webkit-touch-callout: none;box-sizing: border-box;}\r\nhtml, body { margin: 0; padding: 0; height: 100%;}\r\nbody { overflow-y: hidden; -webkit-overflow-scrolling: touch;background-color: ${background};}\r\n#${containerId} {\r\n  color: ${color};\r\n  ${\r\n    autoSize\r\n      ? `\r\n    display: inline-block;\r\n  `\r\n      : `\r\n    height: 100%;\r\n  `\r\n  }\r\n  width: 100%;\r\n  -webkit-overflow-scrolling: touch;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n}\r\n#${editorId} {\r\n  height: 100%;\r\n  outline: 0;\r\n  overflow-y: auto;\r\n  padding: 0;\r\n  ${defaultFont ? 'font-family: \"' + defaultFont + '\"' : ''}\r\n}\r\n\r\n#${editorId}:focus {\r\n  outline: 0px solid transparent;\r\n}\r\n\r\n.ql-container.ql-snow {\r\n  border: none;\r\n}\r\n\r\n.ql-container > .ql-editor.ql-blank::before{\r\n  color: ${placeholder};\r\n}\r\n\r\n${fontCss}\r\n\r\n\r\n</style>\r\n`;\r\n};\r\n"]}