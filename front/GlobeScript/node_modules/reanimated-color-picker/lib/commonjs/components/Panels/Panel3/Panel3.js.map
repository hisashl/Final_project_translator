{"version":3,"file":"Panel3.js","names":["_react","_interopRequireWildcard","require","_reactNative","_reactNativeGestureHandler","_reactNativeReanimated","_index","_interopRequireDefault","_AppContext","_styles","_Thumb","_utils","_Panel3Context","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","Panel3","renderCenterLine","centerChannel","gestures","style","rotate","children","props","hueValue","saturationValue","brightnessValue","onGestureChange","onGestureEnd","ctx","usePickerContext","thumbShape","thumbSize","thumbColor","boundedThumb","renderThumb","thumbStyle","thumbScaleAnimationValue","thumbScaleUpValue","thumbScaleAnimationDuration","thumbScaleUpDuration","thumbInnerStyle","adaptSpectrum","borderRadius","isGestureActive","useSharedValue","width","handleScale","lastHslSaturationValue","hsl","useDerivedValue","hsvColor","h","value","s","v","l","colorKit","runOnUI","HSL","object","centerChannelValue","handleStyle","useAnimatedStyle","center","rotatedHue","distance","angle","Math","PI","posY","sin","posX","cos","transform","translateX","translateY","scale","spectrumStyle","backgroundColor","centerLineStyle","lineThickness","top","left","height","onGestureUpdate","x","y","dx","dy","radius","clamp","sqrt","theta","atan2","radiusPercent","newHueValue","newChannelValue","HSV","onGestureBegin","event","R","clickR","withTiming","duration","onGestureFinish","pan","Gesture","Pan","onBegin","onUpdate","onEnd","tap","Tap","longPress","LongPress","composed","Simultaneous","Exclusive","onLayout","useCallback","nativeEvent","layout","layoutWidth","createElement","Panel3ContextProvider","GestureDetector","gesture","View","styles","panel_container","position","aspectRatio","borderWidth","padding","ImageBackground","source","panel_image","imageStyle","resizeMode","ConditionalRendering","if","StyleSheet","absoluteFillObject","Image","tintColor","undefined","panel3Line","channel","innerStyle"],"sources":["../../../../src/components/Panels/Panel3/Panel3.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { Image, ImageBackground, StyleSheet } from 'react-native';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport Animated, { useAnimatedStyle, useDerivedValue, useSharedValue, withTiming } from 'react-native-reanimated';\n\nimport colorKit from '../../../colorKit/index';\nimport usePickerContext from '../../../AppContext';\nimport { styles } from '../../../styles';\nimport Thumb from '../../Thumb/Thumb';\nimport { clamp, ConditionalRendering } from '../../../utils';\nimport { Panel3ContextProvider } from './Panel3Context';\n\nimport type { Panel3Props } from '../../../types';\nimport type { LayoutChangeEvent } from 'react-native';\nimport type { PanGestureHandlerEventPayload } from 'react-native-gesture-handler';\n\n/** - The circle-shaped slider, with its wheel style design, is utilized to adjust the hue and (saturation or brightness) of colors. */\nexport function Panel3({\n  renderCenterLine = false,\n  centerChannel = 'saturation',\n  gestures = [],\n  style = {},\n  rotate = 0,\n  children,\n  ...props\n}: Panel3Props) {\n  const { hueValue, saturationValue, brightnessValue, onGestureChange, onGestureEnd, ...ctx } = usePickerContext();\n\n  const thumbShape = props.thumbShape ?? ctx.thumbShape,\n    thumbSize = props.thumbSize ?? ctx.thumbSize,\n    thumbColor = props.thumbColor ?? ctx.thumbColor,\n    boundedThumb = props.boundedThumb ?? ctx.boundedThumb,\n    renderThumb = props.renderThumb ?? ctx.renderThumb,\n    thumbStyle = props.thumbStyle ?? ctx.thumbStyle ?? {},\n    thumbScaleAnimationValue = props.thumbScaleUpValue ?? ctx.thumbScaleAnimationValue,\n    thumbScaleAnimationDuration = props.thumbScaleUpDuration ?? ctx.thumbScaleAnimationDuration,\n    thumbInnerStyle = props.thumbInnerStyle ?? ctx.thumbInnerStyle ?? {},\n    adaptSpectrum = props.adaptSpectrum ?? ctx.adaptSpectrum;\n\n  const borderRadius = 2000;\n\n  const isGestureActive = useSharedValue(false);\n  const width = useSharedValue(0);\n  const handleScale = useSharedValue(1);\n  const lastHslSaturationValue = useSharedValue(0);\n\n  // We need to keep track of the HSL saturation value because, when the luminance is 0 or 100,\n  // when converting to/from HSV, the previous saturation value will be lost.\n  const hsl = useDerivedValue(() => {\n    const hsvColor = { h: hueValue.value, s: saturationValue.value, v: brightnessValue.value };\n    const { h, s, l } = colorKit.runOnUI().HSL(hsvColor).object(false);\n    if (l === 100 || l === 0) return { h, s: lastHslSaturationValue.value, l };\n    lastHslSaturationValue.value = s;\n    return { h, s, l };\n  }, [hueValue, saturationValue, brightnessValue]);\n\n  const centerChannelValue = useDerivedValue(() => {\n    if (centerChannel === 'brightness') return brightnessValue.value;\n    if (centerChannel === 'hsl-saturation') return hsl.value.s;\n    return saturationValue.value;\n  }, [brightnessValue, saturationValue, hsl]);\n\n  const handleStyle = useAnimatedStyle(() => {\n    const center = width.value / 2 - (boundedThumb ? thumbSize / 2 : 0),\n      rotatedHue = (hueValue.value - rotate) % 360,\n      distance = (centerChannelValue.value / 100) * (width.value / 2 - (boundedThumb ? thumbSize / 2 : 0)),\n      angle = (rotatedHue * Math.PI) / 180,\n      posY = width.value - (Math.sin(angle) * distance + center) - (boundedThumb ? thumbSize : thumbSize / 2),\n      posX = width.value - (Math.cos(angle) * distance + center) - (boundedThumb ? thumbSize : thumbSize / 2);\n\n    return {\n      transform: [{ translateX: posX }, { translateY: posY }, { scale: handleScale.value }, { rotate: rotatedHue + 90 + 'deg' }],\n    };\n  }, [width, centerChannelValue, hueValue, handleScale]);\n\n  const spectrumStyle = useAnimatedStyle(() => {\n    if (!adaptSpectrum) return {};\n\n    if (centerChannel === 'brightness') {\n      return { backgroundColor: `rgba(255, 255, 255, ${1 - saturationValue.value / 100})` };\n    }\n\n    if (centerChannel === 'hsl-saturation') {\n      if (hsl.value.l < 50) return { backgroundColor: `rgba(0, 0, 0, ${1 - hsl.value.l / 50})` };\n      return { backgroundColor: `rgba(255, 255, 255, ${(hsl.value.l - 50) / 50})` };\n    }\n\n    return { backgroundColor: `rgba(0, 0, 0, ${1 - brightnessValue.value / 100})` };\n  }, [saturationValue, brightnessValue]);\n\n  const centerLineStyle = useAnimatedStyle(() => {\n    if (!renderCenterLine) return {};\n\n    const lineThickness = 1,\n      center = width.value / 2 - (boundedThumb ? thumbSize / 2 : 0),\n      rotatedHue = (hueValue.value - rotate) % 360,\n      distance = (centerChannelValue.value / 100) * center,\n      angle = ((rotatedHue * Math.PI) / Math.PI + 180) % 360; // reversed angle\n\n    return {\n      top: (width.value - lineThickness) / 2,\n      left: (width.value - distance) / 2,\n      height: lineThickness,\n      width: distance,\n      transform: [{ rotate: angle + 'deg' }, { translateX: distance / 2 }, { translateY: 0 }],\n    };\n  }, [width, hueValue, centerChannelValue]);\n\n  const onGestureUpdate = ({ x, y }: PanGestureHandlerEventPayload) => {\n    'worklet';\n\n    if (!isGestureActive.value) return;\n\n    const center = (width.value - (boundedThumb ? thumbSize : 0)) / 2,\n      dx = center - x + (boundedThumb ? thumbSize / 2 : 0),\n      dy = center - y + (boundedThumb ? thumbSize / 2 : 0),\n      radius = clamp(Math.sqrt(dx * dx + dy * dy), center), // distance from center\n      theta = Math.atan2(dy, dx) * (180 / Math.PI), // [0 - 180] range\n      angle = theta < 0 ? 360 + theta : theta, // [0 - 360] range\n      radiusPercent = radius / center,\n      newHueValue = (angle + rotate) % 360,\n      newChannelValue = radiusPercent * 100;\n\n    if (hueValue.value === newHueValue && centerChannelValue.value === newChannelValue) return;\n\n    hueValue.value = newHueValue;\n\n    if (centerChannel === 'hsl-saturation') {\n      // To prevent locking this slider when the luminance is 0 or 100,\n      // this should not affect the resulting color, as the value will be rounded.\n      const l = hsl.value.l === 0 ? 0.01 : hsl.value.l === 100 ? 99.99 : hsl.value.l;\n      const { s, v } = colorKit.runOnUI().HSV({ h: hsl.value.h, s: newChannelValue, l }).object(false);\n      saturationValue.value = s;\n      brightnessValue.value = v;\n    } else if (centerChannel === 'brightness') {\n      brightnessValue.value = newChannelValue;\n    } else {\n      saturationValue.value = newChannelValue;\n    }\n\n    onGestureChange();\n  };\n\n  const onGestureBegin = (event: PanGestureHandlerEventPayload) => {\n    'worklet';\n\n    const R = width.value / 2,\n      dx = R - event.x,\n      dy = R - event.y,\n      clickR = Math.sqrt(dx * dx + dy * dy);\n\n    // Check if the press is outside the circle\n    if (clickR > R) {\n      isGestureActive.value = false;\n      return;\n    }\n\n    isGestureActive.value = true;\n\n    handleScale.value = withTiming(thumbScaleAnimationValue, { duration: thumbScaleAnimationDuration });\n    onGestureUpdate(event);\n  };\n\n  const onGestureFinish = () => {\n    'worklet';\n    isGestureActive.value = false;\n    handleScale.value = withTiming(1, { duration: thumbScaleAnimationDuration });\n    onGestureEnd();\n  };\n\n  const pan = Gesture.Pan().onBegin(onGestureBegin).onUpdate(onGestureUpdate).onEnd(onGestureFinish);\n  const tap = Gesture.Tap().onEnd(onGestureFinish);\n  const longPress = Gesture.LongPress().onEnd(onGestureFinish);\n  const composed = Gesture.Simultaneous(Gesture.Exclusive(pan, tap, longPress), ...gestures);\n\n  const onLayout = useCallback(({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n    const layoutWidth = layout.width;\n    width.value = layoutWidth;\n  }, []);\n\n  return (\n    <Panel3ContextProvider\n      value={{\n        width,\n        adaptSpectrum,\n        centerChannel,\n        centerChannelValue,\n        thumbShape,\n        thumbColor,\n        thumbStyle,\n        thumbInnerStyle,\n        renderThumb,\n        boundedThumb,\n        renderCenterLine,\n        thumbSize,\n        rotate,\n      }}\n    >\n      <GestureDetector gesture={composed}>\n        <Animated.View\n          onLayout={onLayout}\n          style={[\n            styles.panel_container,\n            style,\n            { position: 'relative', aspectRatio: 1, borderWidth: 0, padding: 0, borderRadius },\n          ]}\n        >\n          <ImageBackground\n            source={require('../../../assets/circularHue.png')}\n            style={styles.panel_image}\n            imageStyle={{ transform: [{ rotate: -rotate + 'deg' }] }}\n            resizeMode='stretch'\n          >\n            <ConditionalRendering if={adaptSpectrum && centerChannel === 'brightness'}>\n              <Animated.View style={[{ borderRadius }, spectrumStyle, StyleSheet.absoluteFillObject]} />\n            </ConditionalRendering>\n\n            <Image\n              source={require('../../../assets/blackRadial.png')}\n              style={[\n                styles.panel_image,\n                { tintColor: centerChannel === 'saturation' ? '#fff' : centerChannel === 'hsl-saturation' ? '#888' : undefined },\n              ]}\n              resizeMode='stretch'\n            />\n\n            <ConditionalRendering if={adaptSpectrum && (centerChannel === 'saturation' || centerChannel === 'hsl-saturation')}>\n              <Animated.View style={[{ borderRadius }, spectrumStyle, StyleSheet.absoluteFillObject]} />\n            </ConditionalRendering>\n          </ImageBackground>\n\n          <ConditionalRendering if={renderCenterLine}>\n            <Animated.View style={[styles.panel3Line, centerLineStyle]} />\n          </ConditionalRendering>\n\n          {children}\n\n          <Thumb\n            channel={centerChannel === 'brightness' ? 'v' : 's'}\n            thumbShape={thumbShape}\n            thumbSize={thumbSize}\n            thumbColor={thumbColor}\n            renderThumb={renderThumb}\n            innerStyle={thumbInnerStyle}\n            handleStyle={handleStyle}\n            style={thumbStyle}\n            adaptSpectrum={adaptSpectrum}\n          />\n        </Animated.View>\n      </GestureDetector>\n    </Panel3ContextProvider>\n  );\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,0BAAA,GAAAF,OAAA;AACA,IAAAG,sBAAA,GAAAJ,uBAAA,CAAAC,OAAA;AAEA,IAAAI,MAAA,GAAAC,sBAAA,CAAAL,OAAA;AACA,IAAAM,WAAA,GAAAD,sBAAA,CAAAL,OAAA;AACA,IAAAO,OAAA,GAAAP,OAAA;AACA,IAAAQ,MAAA,GAAAH,sBAAA,CAAAL,OAAA;AACA,IAAAS,MAAA,GAAAT,OAAA;AACA,IAAAU,cAAA,GAAAV,OAAA;AAAwD,SAAAK,uBAAAM,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAhB,wBAAAgB,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAH,UAAA,SAAAG,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAF,OAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAC,GAAA,CAAAJ,CAAA,UAAAG,CAAA,CAAAE,GAAA,CAAAL,CAAA,OAAAM,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAZ,CAAA,oBAAAY,CAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAY,CAAA,SAAAI,CAAA,GAAAR,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAX,CAAA,EAAAY,CAAA,UAAAI,CAAA,KAAAA,CAAA,CAAAX,GAAA,IAAAW,CAAA,CAAAC,GAAA,IAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAI,CAAA,IAAAV,CAAA,CAAAM,CAAA,IAAAZ,CAAA,CAAAY,CAAA,YAAAN,CAAA,CAAAR,OAAA,GAAAE,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAc,GAAA,CAAAjB,CAAA,EAAAM,CAAA,GAAAA,CAAA;AAMxD;AACO,SAASY,MAAMA,CAAC;EACrBC,gBAAgB,GAAG,KAAK;EACxBC,aAAa,GAAG,YAAY;EAC5BC,QAAQ,GAAG,EAAE;EACbC,KAAK,GAAG,CAAC,CAAC;EACVC,MAAM,GAAG,CAAC;EACVC,QAAQ;EACR,GAAGC;AACQ,CAAC,EAAE;EACd,MAAM;IAAEC,QAAQ;IAAEC,eAAe;IAAEC,eAAe;IAAEC,eAAe;IAAEC,YAAY;IAAE,GAAGC;EAAI,CAAC,GAAG,IAAAC,mBAAgB,EAAC,CAAC;EAEhH,MAAMC,UAAU,GAAGR,KAAK,CAACQ,UAAU,IAAIF,GAAG,CAACE,UAAU;IACnDC,SAAS,GAAGT,KAAK,CAACS,SAAS,IAAIH,GAAG,CAACG,SAAS;IAC5CC,UAAU,GAAGV,KAAK,CAACU,UAAU,IAAIJ,GAAG,CAACI,UAAU;IAC/CC,YAAY,GAAGX,KAAK,CAACW,YAAY,IAAIL,GAAG,CAACK,YAAY;IACrDC,WAAW,GAAGZ,KAAK,CAACY,WAAW,IAAIN,GAAG,CAACM,WAAW;IAClDC,UAAU,GAAGb,KAAK,CAACa,UAAU,IAAIP,GAAG,CAACO,UAAU,IAAI,CAAC,CAAC;IACrDC,wBAAwB,GAAGd,KAAK,CAACe,iBAAiB,IAAIT,GAAG,CAACQ,wBAAwB;IAClFE,2BAA2B,GAAGhB,KAAK,CAACiB,oBAAoB,IAAIX,GAAG,CAACU,2BAA2B;IAC3FE,eAAe,GAAGlB,KAAK,CAACkB,eAAe,IAAIZ,GAAG,CAACY,eAAe,IAAI,CAAC,CAAC;IACpEC,aAAa,GAAGnB,KAAK,CAACmB,aAAa,IAAIb,GAAG,CAACa,aAAa;EAE1D,MAAMC,YAAY,GAAG,IAAI;EAEzB,MAAMC,eAAe,GAAG,IAAAC,qCAAc,EAAC,KAAK,CAAC;EAC7C,MAAMC,KAAK,GAAG,IAAAD,qCAAc,EAAC,CAAC,CAAC;EAC/B,MAAME,WAAW,GAAG,IAAAF,qCAAc,EAAC,CAAC,CAAC;EACrC,MAAMG,sBAAsB,GAAG,IAAAH,qCAAc,EAAC,CAAC,CAAC;;EAEhD;EACA;EACA,MAAMI,GAAG,GAAG,IAAAC,sCAAe,EAAC,MAAM;IAChC,MAAMC,QAAQ,GAAG;MAAEC,CAAC,EAAE5B,QAAQ,CAAC6B,KAAK;MAAEC,CAAC,EAAE7B,eAAe,CAAC4B,KAAK;MAAEE,CAAC,EAAE7B,eAAe,CAAC2B;IAAM,CAAC;IAC1F,MAAM;MAAED,CAAC;MAAEE,CAAC;MAAEE;IAAE,CAAC,GAAGC,cAAQ,CAACC,OAAO,CAAC,CAAC,CAACC,GAAG,CAACR,QAAQ,CAAC,CAACS,MAAM,CAAC,KAAK,CAAC;IAClE,IAAIJ,CAAC,KAAK,GAAG,IAAIA,CAAC,KAAK,CAAC,EAAE,OAAO;MAAEJ,CAAC;MAAEE,CAAC,EAAEN,sBAAsB,CAACK,KAAK;MAAEG;IAAE,CAAC;IAC1ER,sBAAsB,CAACK,KAAK,GAAGC,CAAC;IAChC,OAAO;MAAEF,CAAC;MAAEE,CAAC;MAAEE;IAAE,CAAC;EACpB,CAAC,EAAE,CAAChC,QAAQ,EAAEC,eAAe,EAAEC,eAAe,CAAC,CAAC;EAEhD,MAAMmC,kBAAkB,GAAG,IAAAX,sCAAe,EAAC,MAAM;IAC/C,IAAIhC,aAAa,KAAK,YAAY,EAAE,OAAOQ,eAAe,CAAC2B,KAAK;IAChE,IAAInC,aAAa,KAAK,gBAAgB,EAAE,OAAO+B,GAAG,CAACI,KAAK,CAACC,CAAC;IAC1D,OAAO7B,eAAe,CAAC4B,KAAK;EAC9B,CAAC,EAAE,CAAC3B,eAAe,EAAED,eAAe,EAAEwB,GAAG,CAAC,CAAC;EAE3C,MAAMa,WAAW,GAAG,IAAAC,uCAAgB,EAAC,MAAM;IACzC,MAAMC,MAAM,GAAGlB,KAAK,CAACO,KAAK,GAAG,CAAC,IAAInB,YAAY,GAAGF,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;MACjEiC,UAAU,GAAG,CAACzC,QAAQ,CAAC6B,KAAK,GAAGhC,MAAM,IAAI,GAAG;MAC5C6C,QAAQ,GAAIL,kBAAkB,CAACR,KAAK,GAAG,GAAG,IAAKP,KAAK,CAACO,KAAK,GAAG,CAAC,IAAInB,YAAY,GAAGF,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;MACpGmC,KAAK,GAAIF,UAAU,GAAGG,IAAI,CAACC,EAAE,GAAI,GAAG;MACpCC,IAAI,GAAGxB,KAAK,CAACO,KAAK,IAAIe,IAAI,CAACG,GAAG,CAACJ,KAAK,CAAC,GAAGD,QAAQ,GAAGF,MAAM,CAAC,IAAI9B,YAAY,GAAGF,SAAS,GAAGA,SAAS,GAAG,CAAC,CAAC;MACvGwC,IAAI,GAAG1B,KAAK,CAACO,KAAK,IAAIe,IAAI,CAACK,GAAG,CAACN,KAAK,CAAC,GAAGD,QAAQ,GAAGF,MAAM,CAAC,IAAI9B,YAAY,GAAGF,SAAS,GAAGA,SAAS,GAAG,CAAC,CAAC;IAEzG,OAAO;MACL0C,SAAS,EAAE,CAAC;QAAEC,UAAU,EAAEH;MAAK,CAAC,EAAE;QAAEI,UAAU,EAAEN;MAAK,CAAC,EAAE;QAAEO,KAAK,EAAE9B,WAAW,CAACM;MAAM,CAAC,EAAE;QAAEhC,MAAM,EAAE4C,UAAU,GAAG,EAAE,GAAG;MAAM,CAAC;IAC3H,CAAC;EACH,CAAC,EAAE,CAACnB,KAAK,EAAEe,kBAAkB,EAAErC,QAAQ,EAAEuB,WAAW,CAAC,CAAC;EAEtD,MAAM+B,aAAa,GAAG,IAAAf,uCAAgB,EAAC,MAAM;IAC3C,IAAI,CAACrB,aAAa,EAAE,OAAO,CAAC,CAAC;IAE7B,IAAIxB,aAAa,KAAK,YAAY,EAAE;MAClC,OAAO;QAAE6D,eAAe,EAAG,uBAAsB,CAAC,GAAGtD,eAAe,CAAC4B,KAAK,GAAG,GAAI;MAAG,CAAC;IACvF;IAEA,IAAInC,aAAa,KAAK,gBAAgB,EAAE;MACtC,IAAI+B,GAAG,CAACI,KAAK,CAACG,CAAC,GAAG,EAAE,EAAE,OAAO;QAAEuB,eAAe,EAAG,iBAAgB,CAAC,GAAG9B,GAAG,CAACI,KAAK,CAACG,CAAC,GAAG,EAAG;MAAG,CAAC;MAC1F,OAAO;QAAEuB,eAAe,EAAG,uBAAsB,CAAC9B,GAAG,CAACI,KAAK,CAACG,CAAC,GAAG,EAAE,IAAI,EAAG;MAAG,CAAC;IAC/E;IAEA,OAAO;MAAEuB,eAAe,EAAG,iBAAgB,CAAC,GAAGrD,eAAe,CAAC2B,KAAK,GAAG,GAAI;IAAG,CAAC;EACjF,CAAC,EAAE,CAAC5B,eAAe,EAAEC,eAAe,CAAC,CAAC;EAEtC,MAAMsD,eAAe,GAAG,IAAAjB,uCAAgB,EAAC,MAAM;IAC7C,IAAI,CAAC9C,gBAAgB,EAAE,OAAO,CAAC,CAAC;IAEhC,MAAMgE,aAAa,GAAG,CAAC;MACrBjB,MAAM,GAAGlB,KAAK,CAACO,KAAK,GAAG,CAAC,IAAInB,YAAY,GAAGF,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;MAC7DiC,UAAU,GAAG,CAACzC,QAAQ,CAAC6B,KAAK,GAAGhC,MAAM,IAAI,GAAG;MAC5C6C,QAAQ,GAAIL,kBAAkB,CAACR,KAAK,GAAG,GAAG,GAAIW,MAAM;MACpDG,KAAK,GAAG,CAAEF,UAAU,GAAGG,IAAI,CAACC,EAAE,GAAID,IAAI,CAACC,EAAE,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;;IAE1D,OAAO;MACLa,GAAG,EAAE,CAACpC,KAAK,CAACO,KAAK,GAAG4B,aAAa,IAAI,CAAC;MACtCE,IAAI,EAAE,CAACrC,KAAK,CAACO,KAAK,GAAGa,QAAQ,IAAI,CAAC;MAClCkB,MAAM,EAAEH,aAAa;MACrBnC,KAAK,EAAEoB,QAAQ;MACfQ,SAAS,EAAE,CAAC;QAAErD,MAAM,EAAE8C,KAAK,GAAG;MAAM,CAAC,EAAE;QAAEQ,UAAU,EAAET,QAAQ,GAAG;MAAE,CAAC,EAAE;QAAEU,UAAU,EAAE;MAAE,CAAC;IACxF,CAAC;EACH,CAAC,EAAE,CAAC9B,KAAK,EAAEtB,QAAQ,EAAEqC,kBAAkB,CAAC,CAAC;EAEzC,MAAMwB,eAAe,GAAGA,CAAC;IAAEC,CAAC;IAAEC;EAAiC,CAAC,KAAK;IACnE,SAAS;;IAET,IAAI,CAAC3C,eAAe,CAACS,KAAK,EAAE;IAE5B,MAAMW,MAAM,GAAG,CAAClB,KAAK,CAACO,KAAK,IAAInB,YAAY,GAAGF,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC;MAC/DwD,EAAE,GAAGxB,MAAM,GAAGsB,CAAC,IAAIpD,YAAY,GAAGF,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;MACpDyD,EAAE,GAAGzB,MAAM,GAAGuB,CAAC,IAAIrD,YAAY,GAAGF,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;MACpD0D,MAAM,GAAG,IAAAC,YAAK,EAACvB,IAAI,CAACwB,IAAI,CAACJ,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC,EAAEzB,MAAM,CAAC;MAAE;MACtD6B,KAAK,GAAGzB,IAAI,CAAC0B,KAAK,CAACL,EAAE,EAAED,EAAE,CAAC,IAAI,GAAG,GAAGpB,IAAI,CAACC,EAAE,CAAC;MAAE;MAC9CF,KAAK,GAAG0B,KAAK,GAAG,CAAC,GAAG,GAAG,GAAGA,KAAK,GAAGA,KAAK;MAAE;MACzCE,aAAa,GAAGL,MAAM,GAAG1B,MAAM;MAC/BgC,WAAW,GAAG,CAAC7B,KAAK,GAAG9C,MAAM,IAAI,GAAG;MACpC4E,eAAe,GAAGF,aAAa,GAAG,GAAG;IAEvC,IAAIvE,QAAQ,CAAC6B,KAAK,KAAK2C,WAAW,IAAInC,kBAAkB,CAACR,KAAK,KAAK4C,eAAe,EAAE;IAEpFzE,QAAQ,CAAC6B,KAAK,GAAG2C,WAAW;IAE5B,IAAI9E,aAAa,KAAK,gBAAgB,EAAE;MACtC;MACA;MACA,MAAMsC,CAAC,GAAGP,GAAG,CAACI,KAAK,CAACG,CAAC,KAAK,CAAC,GAAG,IAAI,GAAGP,GAAG,CAACI,KAAK,CAACG,CAAC,KAAK,GAAG,GAAG,KAAK,GAAGP,GAAG,CAACI,KAAK,CAACG,CAAC;MAC9E,MAAM;QAAEF,CAAC;QAAEC;MAAE,CAAC,GAAGE,cAAQ,CAACC,OAAO,CAAC,CAAC,CAACwC,GAAG,CAAC;QAAE9C,CAAC,EAAEH,GAAG,CAACI,KAAK,CAACD,CAAC;QAAEE,CAAC,EAAE2C,eAAe;QAAEzC;MAAE,CAAC,CAAC,CAACI,MAAM,CAAC,KAAK,CAAC;MAChGnC,eAAe,CAAC4B,KAAK,GAAGC,CAAC;MACzB5B,eAAe,CAAC2B,KAAK,GAAGE,CAAC;IAC3B,CAAC,MAAM,IAAIrC,aAAa,KAAK,YAAY,EAAE;MACzCQ,eAAe,CAAC2B,KAAK,GAAG4C,eAAe;IACzC,CAAC,MAAM;MACLxE,eAAe,CAAC4B,KAAK,GAAG4C,eAAe;IACzC;IAEAtE,eAAe,CAAC,CAAC;EACnB,CAAC;EAED,MAAMwE,cAAc,GAAIC,KAAoC,IAAK;IAC/D,SAAS;;IAET,MAAMC,CAAC,GAAGvD,KAAK,CAACO,KAAK,GAAG,CAAC;MACvBmC,EAAE,GAAGa,CAAC,GAAGD,KAAK,CAACd,CAAC;MAChBG,EAAE,GAAGY,CAAC,GAAGD,KAAK,CAACb,CAAC;MAChBe,MAAM,GAAGlC,IAAI,CAACwB,IAAI,CAACJ,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;;IAEvC;IACA,IAAIa,MAAM,GAAGD,CAAC,EAAE;MACdzD,eAAe,CAACS,KAAK,GAAG,KAAK;MAC7B;IACF;IAEAT,eAAe,CAACS,KAAK,GAAG,IAAI;IAE5BN,WAAW,CAACM,KAAK,GAAG,IAAAkD,iCAAU,EAAClE,wBAAwB,EAAE;MAAEmE,QAAQ,EAAEjE;IAA4B,CAAC,CAAC;IACnG8C,eAAe,CAACe,KAAK,CAAC;EACxB,CAAC;EAED,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5B,SAAS;;IACT7D,eAAe,CAACS,KAAK,GAAG,KAAK;IAC7BN,WAAW,CAACM,KAAK,GAAG,IAAAkD,iCAAU,EAAC,CAAC,EAAE;MAAEC,QAAQ,EAAEjE;IAA4B,CAAC,CAAC;IAC5EX,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,MAAM8E,GAAG,GAAGC,kCAAO,CAACC,GAAG,CAAC,CAAC,CAACC,OAAO,CAACV,cAAc,CAAC,CAACW,QAAQ,CAACzB,eAAe,CAAC,CAAC0B,KAAK,CAACN,eAAe,CAAC;EAClG,MAAMO,GAAG,GAAGL,kCAAO,CAACM,GAAG,CAAC,CAAC,CAACF,KAAK,CAACN,eAAe,CAAC;EAChD,MAAMS,SAAS,GAAGP,kCAAO,CAACQ,SAAS,CAAC,CAAC,CAACJ,KAAK,CAACN,eAAe,CAAC;EAC5D,MAAMW,QAAQ,GAAGT,kCAAO,CAACU,YAAY,CAACV,kCAAO,CAACW,SAAS,CAACZ,GAAG,EAAEM,GAAG,EAAEE,SAAS,CAAC,EAAE,GAAG/F,QAAQ,CAAC;EAE1F,MAAMoG,QAAQ,GAAG,IAAAC,kBAAW,EAAC,CAAC;IAAEC,WAAW,EAAE;MAAEC;IAAO;EAAqB,CAAC,KAAK;IAC/E,MAAMC,WAAW,GAAGD,MAAM,CAAC5E,KAAK;IAChCA,KAAK,CAACO,KAAK,GAAGsE,WAAW;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE9I,MAAA,CAAAe,OAAA,CAAAgI,aAAA,CAACnI,cAAA,CAAAoI,qBAAqB;IACpBxE,KAAK,EAAE;MACLP,KAAK;MACLJ,aAAa;MACbxB,aAAa;MACb2C,kBAAkB;MAClB9B,UAAU;MACVE,UAAU;MACVG,UAAU;MACVK,eAAe;MACfN,WAAW;MACXD,YAAY;MACZjB,gBAAgB;MAChBe,SAAS;MACTX;IACF;EAAE,gBAEFxC,MAAA,CAAAe,OAAA,CAAAgI,aAAA,CAAC3I,0BAAA,CAAA6I,eAAe;IAACC,OAAO,EAAEX;EAAS,gBACjCvI,MAAA,CAAAe,OAAA,CAAAgI,aAAA,CAAC1I,sBAAA,CAAAU,OAAQ,CAACoI,IAAI;IACZT,QAAQ,EAAEA,QAAS;IACnBnG,KAAK,EAAE,CACL6G,cAAM,CAACC,eAAe,EACtB9G,KAAK,EACL;MAAE+G,QAAQ,EAAE,UAAU;MAAEC,WAAW,EAAE,CAAC;MAAEC,WAAW,EAAE,CAAC;MAAEC,OAAO,EAAE,CAAC;MAAE3F;IAAa,CAAC;EAClF,gBAEF9D,MAAA,CAAAe,OAAA,CAAAgI,aAAA,CAAC5I,YAAA,CAAAuJ,eAAe;IACdC,MAAM,EAAEzJ,OAAO,kCAAkC,CAAE;IACnDqC,KAAK,EAAE6G,cAAM,CAACQ,WAAY;IAC1BC,UAAU,EAAE;MAAEhE,SAAS,EAAE,CAAC;QAAErD,MAAM,EAAE,CAACA,MAAM,GAAG;MAAM,CAAC;IAAE,CAAE;IACzDsH,UAAU,EAAC;EAAS,gBAEpB9J,MAAA,CAAAe,OAAA,CAAAgI,aAAA,CAACpI,MAAA,CAAAoJ,oBAAoB;IAACC,EAAE,EAAEnG,aAAa,IAAIxB,aAAa,KAAK;EAAa,gBACxErC,MAAA,CAAAe,OAAA,CAAAgI,aAAA,CAAC1I,sBAAA,CAAAU,OAAQ,CAACoI,IAAI;IAAC5G,KAAK,EAAE,CAAC;MAAEuB;IAAa,CAAC,EAAEmC,aAAa,EAAEgE,uBAAU,CAACC,kBAAkB;EAAE,CAAE,CACrE,CAAC,eAEvBlK,MAAA,CAAAe,OAAA,CAAAgI,aAAA,CAAC5I,YAAA,CAAAgK,KAAK;IACJR,MAAM,EAAEzJ,OAAO,kCAAkC,CAAE;IACnDqC,KAAK,EAAE,CACL6G,cAAM,CAACQ,WAAW,EAClB;MAAEQ,SAAS,EAAE/H,aAAa,KAAK,YAAY,GAAG,MAAM,GAAGA,aAAa,KAAK,gBAAgB,GAAG,MAAM,GAAGgI;IAAU,CAAC,CAChH;IACFP,UAAU,EAAC;EAAS,CACrB,CAAC,eAEF9J,MAAA,CAAAe,OAAA,CAAAgI,aAAA,CAACpI,MAAA,CAAAoJ,oBAAoB;IAACC,EAAE,EAAEnG,aAAa,KAAKxB,aAAa,KAAK,YAAY,IAAIA,aAAa,KAAK,gBAAgB;EAAE,gBAChHrC,MAAA,CAAAe,OAAA,CAAAgI,aAAA,CAAC1I,sBAAA,CAAAU,OAAQ,CAACoI,IAAI;IAAC5G,KAAK,EAAE,CAAC;MAAEuB;IAAa,CAAC,EAAEmC,aAAa,EAAEgE,uBAAU,CAACC,kBAAkB;EAAE,CAAE,CACrE,CACP,CAAC,eAElBlK,MAAA,CAAAe,OAAA,CAAAgI,aAAA,CAACpI,MAAA,CAAAoJ,oBAAoB;IAACC,EAAE,EAAE5H;EAAiB,gBACzCpC,MAAA,CAAAe,OAAA,CAAAgI,aAAA,CAAC1I,sBAAA,CAAAU,OAAQ,CAACoI,IAAI;IAAC5G,KAAK,EAAE,CAAC6G,cAAM,CAACkB,UAAU,EAAEnE,eAAe;EAAE,CAAE,CACzC,CAAC,EAEtB1D,QAAQ,eAETzC,MAAA,CAAAe,OAAA,CAAAgI,aAAA,CAACrI,MAAA,CAAAK,OAAK;IACJwJ,OAAO,EAAElI,aAAa,KAAK,YAAY,GAAG,GAAG,GAAG,GAAI;IACpDa,UAAU,EAAEA,UAAW;IACvBC,SAAS,EAAEA,SAAU;IACrBC,UAAU,EAAEA,UAAW;IACvBE,WAAW,EAAEA,WAAY;IACzBkH,UAAU,EAAE5G,eAAgB;IAC5BqB,WAAW,EAAEA,WAAY;IACzB1C,KAAK,EAAEgB,UAAW;IAClBM,aAAa,EAAEA;EAAc,CAC9B,CACY,CACA,CACI,CAAC;AAE5B"}