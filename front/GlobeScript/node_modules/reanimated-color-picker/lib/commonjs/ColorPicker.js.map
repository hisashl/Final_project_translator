{"version":3,"file":"ColorPicker.js","names":["_react","_interopRequireWildcard","require","_reactNative","_reactNativeGestureHandler","_reactNativeReanimated","_index","_interopRequireDefault","_AppContext","_utils","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","isWeb","global","setImmediate","setTimeout","enableExperimentalWebImplementation","error","ColorPicker","forwardRef","adaptSpectrum","sliderThickness","thumbAnimationDuration","thumbSize","thumbShape","boundedThumb","thumbScaleAnimationValue","thumbScaleAnimationDuration","thumbColor","renderThumb","thumbStyle","thumbInnerStyle","value","onChange","onComplete","style","children","createElement","Text","ref","initialColor","useRef","colorKit","HSV","object","current","hueValue","useSharedValue","h","saturationValue","s","brightnessValue","v","alphaValue","returnedResults","inputColor","color","hex","runOnUI","HEX","rgb","RGB","string","rgba","hsl","HSL","hsla","hsv","hsva","hwb","HWB","hwba","onGestureEnd","colorObject","runOnJS","onGestureChange","setColor","duration","withTiming","useEffect","newColorFormat","getFormat","currentColors","useImperativeHandle","ctxValue","GestureHandlerRootView","direction","undefined","PickerContextProvider","_default","exports"],"sources":["../src/ColorPicker.tsx"],"sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\nimport { Text } from 'react-native';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { runOnJS, useSharedValue, withTiming } from 'react-native-reanimated';\n\nimport colorKit from './colorKit/index';\nimport { PickerContextProvider } from './AppContext';\nimport { isWeb } from './utils';\n\nimport type { ColorPickerContext, ColorPickerProps, ColorPickerRef } from './types';\nimport type { SupportedColorFormats } from './colorKit/types';\n\nif (isWeb) {\n  // @ts-expect-error no global\n  if (!global.setImmediate) global.setImmediate = setTimeout;\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { enableExperimentalWebImplementation } = require('react-native-gesture-handler');\n    enableExperimentalWebImplementation(true);\n  } catch (error) {\n    // ignore\n  }\n}\n\nconst ColorPicker = forwardRef<ColorPickerRef, ColorPickerProps>(\n  (\n    {\n      adaptSpectrum = false,\n      sliderThickness = 25,\n      thumbAnimationDuration = 200,\n      thumbSize = 35,\n      thumbShape = 'ring',\n      boundedThumb = false,\n      thumbScaleAnimationValue = 1.2,\n      thumbScaleAnimationDuration = 100,\n      thumbColor,\n      renderThumb,\n      thumbStyle,\n      thumbInnerStyle,\n      value = '#fff',\n      onChange,\n      onComplete,\n      style = {},\n      children = <Text>NO CHILDREN</Text>,\n    },\n    ref,\n  ) => {\n    const initialColor = useRef(colorKit.HSV(value).object(false)).current;\n    // color's channels values.\n    const hueValue = useSharedValue(initialColor.h);\n    const saturationValue = useSharedValue(initialColor.s);\n    const brightnessValue = useSharedValue(initialColor.v);\n    const alphaValue = useSharedValue(initialColor.a);\n\n    const returnedResults = (inputColor?: SupportedColorFormats) => {\n      'worklet';\n\n      const color = inputColor ?? {\n        h: hueValue.value,\n        s: saturationValue.value,\n        v: brightnessValue.value,\n        a: alphaValue.value,\n      };\n\n      return {\n        get hex() {\n          return colorKit.runOnUI().HEX(color);\n        },\n        get rgb() {\n          return colorKit.runOnUI().RGB(color).string(false);\n        },\n        get rgba() {\n          return colorKit.runOnUI().RGB(color).string(true);\n        },\n        get hsl() {\n          return colorKit.runOnUI().HSL(color).string(false);\n        },\n        get hsla() {\n          return colorKit.runOnUI().HSL(color).string(true);\n        },\n        get hsv() {\n          return colorKit.runOnUI().HSV(color).string(false);\n        },\n        get hsva() {\n          return colorKit.runOnUI().HSV(color).string(true);\n        },\n        get hwb() {\n          return colorKit.runOnUI().HWB(color).string(false);\n        },\n        get hwba() {\n          return colorKit.runOnUI().HWB(color).string(true);\n        },\n      };\n    };\n\n    const onGestureEnd = (color?: SupportedColorFormats) => {\n      'worklet';\n\n      if (!onComplete) return;\n      const colorObject = returnedResults(color);\n\n      try {\n        // run on the UI thread\n        onComplete(colorObject);\n      } catch (error) {\n        // run on the JS thread\n        runOnJS(onComplete)(colorObject);\n      }\n    };\n\n    const onGestureChange = (color?: SupportedColorFormats) => {\n      'worklet';\n\n      if (!onChange) return;\n      const colorObject = returnedResults(color);\n\n      try {\n        // run on the UI thread\n        onChange(colorObject);\n      } catch (error) {\n        // run on the JS thread\n        runOnJS(onChange)(colorObject);\n      }\n    };\n\n    const setColor = (color: SupportedColorFormats, duration = thumbAnimationDuration) => {\n      const { h, s, v, a } = colorKit.HSV(color).object(false);\n\n      hueValue.value = withTiming(h, { duration });\n      saturationValue.value = withTiming(s, { duration });\n      brightnessValue.value = withTiming(v, { duration });\n      alphaValue.value = withTiming(a, { duration });\n    };\n\n    useEffect(() => {\n      // Ignore value changes if the current color already matches the new color from the value props.\n      const newColorFormat = colorKit.getFormat(value);\n      const currentColors = returnedResults();\n\n      // null or named color E.g \"red\"\n      if (!newColorFormat || newColorFormat === 'named') {\n        setColor(value);\n        return;\n      }\n\n      // hex color\n      if (newColorFormat === 'hex3' || newColorFormat === 'hex4' || newColorFormat === 'hex6' || newColorFormat === 'hex8') {\n        if (value !== currentColors.hex) setColor(value);\n        return;\n      }\n\n      // hsl | hsla | rgb | rgba | hsva | hsv | hwba | hwb\n      if (newColorFormat in currentColors) {\n        if (value !== currentColors[newColorFormat]) setColor(value);\n        return;\n      }\n\n      setColor(value);\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({ setColor }));\n\n    const ctxValue: ColorPickerContext = {\n      hueValue,\n      saturationValue,\n      brightnessValue,\n      alphaValue,\n\n      adaptSpectrum,\n\n      sliderThickness,\n      thumbSize,\n      thumbShape,\n      boundedThumb,\n      thumbColor,\n      renderThumb,\n      thumbStyle,\n      thumbInnerStyle,\n      thumbScaleAnimationValue,\n      thumbScaleAnimationDuration,\n\n      value,\n      setColor,\n\n      returnedResults,\n      onGestureEnd,\n      onGestureChange,\n    };\n\n    return (\n      <GestureHandlerRootView style={[{ direction: isWeb ? 'ltr' : undefined }, style]}>\n        <PickerContextProvider value={ctxValue}>{children}</PickerContextProvider>\n      </GestureHandlerRootView>\n    );\n  },\n);\n\nexport default ColorPicker;\n"],"mappings":"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"}