{"version":3,"file":"InputWidget.js","names":["React","useState","Image","Pressable","StyleSheet","Text","View","colorKit","usePickerContext","styles","ConditionalRendering","getStyle","HexWidget","HslWidget","HsvWidget","HwbWidget","RgbWidget","defaultFormats","InputWidget","defaultFormat","formats","iconColor","disableAlphaChannel","containerStyle","inputStyle","inputTitleStyle","iconStyle","inputProps","setColor","returnedResults","hueValue","saturationValue","brightnessValue","alphaValue","onGestureChange","onGestureEnd","format","setFormat","includes","onChange","color","_colorKit$getFormat","isHex","getFormat","setAlpha","hsv","object","cycle","index","indexOf","nextIndex","length","inputsProps","Input","createElement","gap","iconWidth","buttonIconStyle","flatten","arrowButton","style","container","inputsWrapper","if","width","onPress","tintColor","source","require","inputTitle"],"sources":["../../../src/components/InputWidget/InputWidget.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Image, Pressable, StyleSheet, Text, View } from 'react-native';\n\nimport colorKit from '../../colorKit/index';\nimport usePickerContext from '../../AppContext';\nimport { styles } from '../../styles';\nimport { ConditionalRendering, getStyle } from '../../utils';\nimport HexWidget from './Widgets/HexWidget';\nimport HslWidget from './Widgets/HslWidget';\nimport HsvWidget from './Widgets/HsvWidget';\nimport HwbWidget from './Widgets/HwbWidget';\nimport RgbWidget from './Widgets/RgbWidget';\n\nimport type { InputWidgetProps } from '../../types';\nimport type { SupportedColorFormats } from '../../colorKit/types';\n\nconst defaultFormats = ['HEX', 'RGB', 'HSL', 'HWB', 'HSV'] as const;\n\nexport function InputWidget({\n  defaultFormat = 'HEX',\n  formats = defaultFormats,\n  iconColor = 'black',\n  disableAlphaChannel = false,\n  containerStyle = {},\n  inputStyle = {},\n  inputTitleStyle = {},\n  iconStyle = {},\n  inputProps = {},\n}: InputWidgetProps) {\n  const { setColor, returnedResults, hueValue, saturationValue, brightnessValue, alphaValue, onGestureChange, onGestureEnd } =\n    usePickerContext();\n\n  const [format, setFormat] = useState<typeof defaultFormat>(\n    formats.includes(defaultFormat) ? defaultFormat : formats[0] ?? 'HEX',\n  );\n\n  const onChange = (color: SupportedColorFormats) => {\n    const isHex = colorKit.getFormat(color)?.includes('hex');\n    if (disableAlphaChannel && isHex) color = colorKit.setAlpha(color, 1).hsv().object(false);\n\n    setColor(color, 0);\n    onGestureChange(color);\n    onGestureEnd(color);\n  };\n\n  const cycle = () => {\n    const index = formats.indexOf(format);\n    const nextIndex = (index + 1) % formats.length;\n    setFormat(formats[nextIndex]);\n  };\n\n  const inputsProps = {\n    onChange,\n    returnedResults,\n    hueValue,\n    saturationValue,\n    brightnessValue,\n    alphaValue,\n    inputStyle,\n    inputTitleStyle,\n    inputProps,\n    disableAlphaChannel,\n  };\n  const Input = () => {\n    switch (format) {\n      case 'HEX':\n        return <HexWidget {...inputsProps} />;\n      case 'RGB':\n        return <RgbWidget {...inputsProps} />;\n      case 'HSL':\n        return <HslWidget {...inputsProps} />;\n      case 'HWB':\n        return <HwbWidget {...inputsProps} />;\n      case 'HSV':\n        return <HsvWidget {...inputsProps} />;\n    }\n  };\n\n  const gap = getStyle(containerStyle, 'gap') ?? 5;\n  const iconWidth = getStyle(iconStyle, 'width') ?? 24;\n  const buttonIconStyle = StyleSheet.flatten([styles.arrowButton, iconStyle]);\n\n  return (\n    <View style={[styles.container, containerStyle]}>\n      <View style={[styles.inputsWrapper, { gap }]}>\n        <Input />\n      </View>\n\n      <ConditionalRendering if={formats.length > 1}>\n        <View style={{ width: iconWidth }}>\n          <Pressable onPress={cycle}>\n            <Image style={[buttonIconStyle, { tintColor: iconColor }]} source={require('../../assets/arrow-icon.png')} />\n          </Pressable>\n          <Text style={styles.inputTitle}> </Text>\n        </View>\n      </ConditionalRendering>\n    </View>\n  );\n}\n"],"mappings":"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"}