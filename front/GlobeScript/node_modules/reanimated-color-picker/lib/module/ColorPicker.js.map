{"version":3,"file":"ColorPicker.js","names":["React","forwardRef","useEffect","useImperativeHandle","useRef","Text","GestureHandlerRootView","runOnJS","useSharedValue","withTiming","colorKit","PickerContextProvider","isWeb","global","setImmediate","setTimeout","enableExperimentalWebImplementation","require","error","ColorPicker","adaptSpectrum","sliderThickness","thumbAnimationDuration","thumbSize","thumbShape","boundedThumb","thumbScaleAnimationValue","thumbScaleAnimationDuration","thumbColor","renderThumb","thumbStyle","thumbInnerStyle","value","onChange","onComplete","style","children","createElement","ref","initialColor","HSV","object","current","hueValue","h","saturationValue","s","brightnessValue","v","alphaValue","a","returnedResults","inputColor","color","hex","runOnUI","HEX","rgb","RGB","string","rgba","hsl","HSL","hsla","hsv","hsva","hwb","HWB","hwba","onGestureEnd","colorObject","onGestureChange","setColor","duration","newColorFormat","getFormat","currentColors","ctxValue","direction","undefined"],"sources":["../src/ColorPicker.tsx"],"sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\nimport { Text } from 'react-native';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { runOnJS, useSharedValue, withTiming } from 'react-native-reanimated';\n\nimport colorKit from './colorKit/index';\nimport { PickerContextProvider } from './AppContext';\nimport { isWeb } from './utils';\n\nimport type { ColorPickerContext, ColorPickerProps, ColorPickerRef } from './types';\nimport type { SupportedColorFormats } from './colorKit/types';\n\nif (isWeb) {\n  // @ts-expect-error no global\n  if (!global.setImmediate) global.setImmediate = setTimeout;\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { enableExperimentalWebImplementation } = require('react-native-gesture-handler');\n    enableExperimentalWebImplementation(true);\n  } catch (error) {\n    // ignore\n  }\n}\n\nconst ColorPicker = forwardRef<ColorPickerRef, ColorPickerProps>(\n  (\n    {\n      adaptSpectrum = false,\n      sliderThickness = 25,\n      thumbAnimationDuration = 200,\n      thumbSize = 35,\n      thumbShape = 'ring',\n      boundedThumb = false,\n      thumbScaleAnimationValue = 1.2,\n      thumbScaleAnimationDuration = 100,\n      thumbColor,\n      renderThumb,\n      thumbStyle,\n      thumbInnerStyle,\n      value = '#fff',\n      onChange,\n      onComplete,\n      style = {},\n      children = <Text>NO CHILDREN</Text>,\n    },\n    ref,\n  ) => {\n    const initialColor = useRef(colorKit.HSV(value).object(false)).current;\n    // color's channels values.\n    const hueValue = useSharedValue(initialColor.h);\n    const saturationValue = useSharedValue(initialColor.s);\n    const brightnessValue = useSharedValue(initialColor.v);\n    const alphaValue = useSharedValue(initialColor.a);\n\n    const returnedResults = (inputColor?: SupportedColorFormats) => {\n      'worklet';\n\n      const color = inputColor ?? {\n        h: hueValue.value,\n        s: saturationValue.value,\n        v: brightnessValue.value,\n        a: alphaValue.value,\n      };\n\n      return {\n        get hex() {\n          return colorKit.runOnUI().HEX(color);\n        },\n        get rgb() {\n          return colorKit.runOnUI().RGB(color).string(false);\n        },\n        get rgba() {\n          return colorKit.runOnUI().RGB(color).string(true);\n        },\n        get hsl() {\n          return colorKit.runOnUI().HSL(color).string(false);\n        },\n        get hsla() {\n          return colorKit.runOnUI().HSL(color).string(true);\n        },\n        get hsv() {\n          return colorKit.runOnUI().HSV(color).string(false);\n        },\n        get hsva() {\n          return colorKit.runOnUI().HSV(color).string(true);\n        },\n        get hwb() {\n          return colorKit.runOnUI().HWB(color).string(false);\n        },\n        get hwba() {\n          return colorKit.runOnUI().HWB(color).string(true);\n        },\n      };\n    };\n\n    const onGestureEnd = (color?: SupportedColorFormats) => {\n      'worklet';\n\n      if (!onComplete) return;\n      const colorObject = returnedResults(color);\n\n      try {\n        // run on the UI thread\n        onComplete(colorObject);\n      } catch (error) {\n        // run on the JS thread\n        runOnJS(onComplete)(colorObject);\n      }\n    };\n\n    const onGestureChange = (color?: SupportedColorFormats) => {\n      'worklet';\n\n      if (!onChange) return;\n      const colorObject = returnedResults(color);\n\n      try {\n        // run on the UI thread\n        onChange(colorObject);\n      } catch (error) {\n        // run on the JS thread\n        runOnJS(onChange)(colorObject);\n      }\n    };\n\n    const setColor = (color: SupportedColorFormats, duration = thumbAnimationDuration) => {\n      const { h, s, v, a } = colorKit.HSV(color).object(false);\n\n      hueValue.value = withTiming(h, { duration });\n      saturationValue.value = withTiming(s, { duration });\n      brightnessValue.value = withTiming(v, { duration });\n      alphaValue.value = withTiming(a, { duration });\n    };\n\n    useEffect(() => {\n      // Ignore value changes if the current color already matches the new color from the value props.\n      const newColorFormat = colorKit.getFormat(value);\n      const currentColors = returnedResults();\n\n      // null or named color E.g \"red\"\n      if (!newColorFormat || newColorFormat === 'named') {\n        setColor(value);\n        return;\n      }\n\n      // hex color\n      if (newColorFormat === 'hex3' || newColorFormat === 'hex4' || newColorFormat === 'hex6' || newColorFormat === 'hex8') {\n        if (value !== currentColors.hex) setColor(value);\n        return;\n      }\n\n      // hsl | hsla | rgb | rgba | hsva | hsv | hwba | hwb\n      if (newColorFormat in currentColors) {\n        if (value !== currentColors[newColorFormat]) setColor(value);\n        return;\n      }\n\n      setColor(value);\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({ setColor }));\n\n    const ctxValue: ColorPickerContext = {\n      hueValue,\n      saturationValue,\n      brightnessValue,\n      alphaValue,\n\n      adaptSpectrum,\n\n      sliderThickness,\n      thumbSize,\n      thumbShape,\n      boundedThumb,\n      thumbColor,\n      renderThumb,\n      thumbStyle,\n      thumbInnerStyle,\n      thumbScaleAnimationValue,\n      thumbScaleAnimationDuration,\n\n      value,\n      setColor,\n\n      returnedResults,\n      onGestureEnd,\n      onGestureChange,\n    };\n\n    return (\n      <GestureHandlerRootView style={[{ direction: isWeb ? 'ltr' : undefined }, style]}>\n        <PickerContextProvider value={ctxValue}>{children}</PickerContextProvider>\n      </GestureHandlerRootView>\n    );\n  },\n);\n\nexport default ColorPicker;\n"],"mappings":"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"}